@model ProcessManagement.Models.TaskProcess

@{
    ViewBag.Title = "AddFormTask";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var step = ViewData["Step"] as ProcessManagement.Models.Step;
    var group = ViewData["Group"] as ProcessManagement.Models.Group;
    var roles = ViewData["ListRole"] as List<ProcessManagement.Models.Role>;
    var maxFileSizeRule = ViewData["FileMaxSize"] as ProcessManagement.Models.ConfigRule;
    var maxSize = maxFileSizeRule.Value + maxFileSizeRule.Unit;
}


@section CustomCss{
    <link rel="stylesheet" href="~/Content/vendor/dropify/css/dropify.min.css">
    <link rel="stylesheet" href="~/Content/vendor/select2/dist/css/select2.min.css" />
    <link rel="stylesheet" href="~/Content/vendor/switchery/dist/switchery.min.css" />
}
<div class="block-header">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <a href="javascript:void(0);" class="btn btn-xs btn-link primary-theme btn-toggle-fullwidth primary-theme">
                <i class="fa fa-arrow-left"></i>
            </a>
            <ul class="breadcrumb">
                <li><a href="@Url.RouteUrl("GroupLocalizedDefault", new { controller = "group", action = "index"})"><i class="icon-home"></i></a></li>
                <li><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "group", action = "show", groupid = group.Id })">Group: @group.Name</a></li>
                <li><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "process", action = "showstep", groupid = group.Id, processid = step.Process.Id })">Process: @step.Process.Name</a></li>
                <li><a href="javascript:void(0);">Step: @step.Name</a></li>
                <li><a href="javascript:void(0);"><i class="fa fa-plus"></i> New Task Form</a></li>
            </ul>
        </div>
        @*<div class="col-lg-6 col-md-4 col-sm-12 text-right">
                <div class="bh_chart hidden-xs">
                    <div class="float-left m-r-15">
                        <small>Visitors</small>
                        <h6 class="mb-0 mt-1"><i class="icon-user"></i> 1,784</h6>
                    </div>
                    <span class="bh_visitors float-right">2,5,1,8,3,6,7,5</span>
                </div>
                <div class="bh_chart hidden-sm">
                    <div class="float-left m-r-15">
                        <small>Visits</small>
                        <h6 class="mb-0 mt-1"><i class="icon-globe"></i> 325</h6>
                    </div>
                    <span class="bh_visits float-right">10,8,9,3,5,8,5</span>
                </div>
                <div class="bh_chart hidden-sm">
                    <div class="float-left m-r-15">
                        <small>Chats</small>
                        <h6 class="mb-0 mt-1"><i class="icon-bubbles"></i> 13</h6>
                    </div>
                    <span class="bh_chats float-right">1,8,5,6,2,4,3,2</span>
                </div>
            </div>*@
    </div>
</div>
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="body form-validation">
                <div class="row clearfix">
                    <div class="col-sm-8">
                        <div class="form-group">
                            <label for="task-name" class="required">Task Name</label>
                            <input type="text" class="form-control" id="task-name" name="@Html.NameFor(m => m.Name)" required>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <label for="task-role">Select Role</label>
                        <select id="task-role" class="form-control show-tick ms select2">
                            <option></option>
                            @foreach (var role in roles.Where(x => x.IsRun == null || x.IsRun == false))
                            {
                                <option value="@role.Id">@role.Name</option>
                            }
                        </select>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="task-file">Upload File</label>
                            <input type="file" class="dropify" id="task-file" maxsize="@maxSize">
                            <div class="mt-3"></div>
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="task-description">Description</label>
                            <textarea class="form-control" rows="6" placeholder="Write something about your task (optional)" id="task-description" name="@Html.NameFor(m => m.Description)"></textarea>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="build-wrap" class="required">Form builder</label>
                            <div id="build-wrap">

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="mt-2">
                            <button id="btn-save" class="btn btn-primary-theme" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Creating...">Create</button>
                            <button id="btn-save-new" class="btn btn-primary-theme waves-effect" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Creating...">Create & New</button>
                            <a href="@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "process" ,action = "showstep", groupslug = group.groupSlug, groupid = group.Id, processid = step.IdProcess })" class="btn btn-default">Go Back</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section CustomScripts{
    <script src="~/Content/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/Content/build/js/pages/forms/dropify.js"></script>
    <script src="~/Content/vendor/select2/dist/js/select2.min.js"></script>
    <script src="~/Content/vendor/switchery/dist/switchery.min.js"></script>
    <script src="~/Content/vendor/FormBuilder/form-builder.min.js"></script>
    <script src="~/Content/vendor/jquery-ui-custom/jquery-ui.min.js"></script>
    <script>
        $(function () {
            var options = {
                disableFields: [
                    'header',
                    'button',
                    'hidden',
                    'autocomplete',
                    'file'
                ],
                disabledAttrs: [
                    'access',
                    'className',
                    'placeholder',
                    'name',
                    'value',
                    'inline',
                    'other',
                    'step',
                    'toggle'
                ],
                disabledSubtypes: {
                    textarea: ['quill']
                },
                fields: [{
                    label: 'Upload File',
                    attrs: {
                        type: 'uploadFile'
                    },
                    icon: `<img src="https://img.icons8.com/ios/16/000000/upload.png">`
                }],
                templates: {
                    uploadFile: function (fieldData) {
                        return {
                            field: '<input type="file" id="' + fieldData.name + '">',
                            onRender: function () {
                                var inputfile = $(`#${fieldData.name}`);
                                inputfile.dropify();
                            }
                        };
                    }
                },
                typeUserAttrs: {
                    uploadFile: {
                        maxfilesize: {
                            label: 'Max Size',
                            value: '10',
                            type: 'number'
                        },
                        unit: {
                            label: 'Unit',
                            options: {
                                'b': 'Byte',
                                'mb': 'Megabyte',
                                'kb': 'Kilobyte',
                                'gb': 'Gigabyte'
                            },
                            value: 'mb'
                        }

                    }
                },
                showActionButtons: false,
                i18n: {
                    locale: 'vi-VN',
                    override: {
                        'vi-VN': {
                            "number": "Trường văn bảng dạng số",
                            "uploadFile": "Đăng tải tập tin"
                        }
                    }
                }
            };
            var formB = $("#build-wrap").formBuilder(options);
            createSwitch();
            document.addEventListener('fieldAdded', function (e) {
                var formContainer = $("#build-wrap").parents(".form-group")
                formContainer.find(".error-message").remove();
                formContainer.removeClass("error");
            });
            var form = $(".form-validation").formValidation();
            $("select#task-role").select2({
                placeholder: "Select Role",
                allowClear: true
            });
            $("#btn-save, #btn-save-new").on("click", function () {
                $this = $(this);

                var name = $('#task-name').val();
                var role = $('#task-role').val();
                var description = $('#task-description').val();

                var formBuilder = formB.actions.getData('json', true).replace(/\r?\n|\r/g, '');
                formBuilder = JSON.parse(formBuilder);
                var tempArr =[]
                for (var i = 0; i < formBuilder.length; i++) {
                    tempArr.push(formBuilder[i]);
                }

                var isHaveError = form.validates();
                if (tempArr.length == 0) {
                    var element = $("#build-wrap");
                    form.setFormError(element, "At least one input in form");
                    isHaveError = true;
                }
                if (isHaveError) {
                    showToastr("error", "Error!!", "toast-bottom-left")
                    return false;
                }
                var file = $("#task-file")[0].files[0];
                var data = new FormData();
                data.append("name", name);
                data.append("stepid", @step.Id);
                data.append("idRole", role);
                data.append("description", description);
                data.append("fileupload", file);
                data.append("formBuilder", JSON.stringify(tempArr));

                toggleLoading($this);
                setTimeout(function () {
                    if ($this.attr("id") == "btn-save-new") {
                        AddFormTask(data, true)
                    } else {
                        AddFormTask(data)
                    }
                    toggleLoading($this);
                },1000)

            })
        });
        function AddFormTask(data, reload = false) {
            $.ajax({
                url: "@Url.Action("AddFormTask", "process", new { area = "api" })",
                type: "POST",
                data: data,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        localStorage.setItem("showStep", @step.Id);
                        if (reload) {
                            location.reload();
                        } else {
                            location.href = '@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "process" ,action = "showstep", groupslug = group.groupSlug, groupid = group.Id, processid = step.IdProcess })';
                        }
                    } else {
                        showToastr("error", response.message, "toast-bottom-left")
                        console.error(response)
                    }
                }
            });
        }
    </script>
}