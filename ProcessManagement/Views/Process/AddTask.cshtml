@model ProcessManagement.Models.TaskProcess

@{
    ViewBag.Title = "AddTask";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var step = ViewData["Step"] as ProcessManagement.Models.Step;
    var group = ViewData["Group"] as ProcessManagement.Models.Group;
    var roles = ViewData["ListRole"] as List<ProcessManagement.Models.Role>;
    var maxFileSizeRule = ViewData["FileMaxSize"] as ProcessManagement.Models.ConfigRule;
    var maxSize = maxFileSizeRule.Value + maxFileSizeRule.Unit;
}


@section CustomCss{
    <link rel="stylesheet" href="~/Content/vendor/dropify/css/dropify.min.css">
    <link rel="stylesheet" href="~/Content/vendor/select2/dist/css/select2.min.css" />
    <link rel="stylesheet" href="~/Content/vendor/switchery/dist/switchery.min.css" />
}
<div class="block-header">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <a href="javascript:void(0);" class="btn btn-xs btn-link primary-theme btn-toggle-fullwidth primary-theme">
                <i class="fa fa-arrow-left"></i>
            </a>
            <ul class="breadcrumb">
                <li><a href="@Url.RouteUrl("GroupLocalizedDefault", new { controller = "group", action = "index"})"><i class="icon-home"></i></a></li>
                <li><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "group", action = "show", groupid = group.Id })">Group: @group.Name</a></li>
                <li><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "process", action = "showstep", groupid = group.Id, processid = step.Process.Id })">Process: @step.Process.Name</a></li>
                <li><a href="javascript:void(0);">Step: @step.Name</a></li>
                <li><a href="javascript:void(0);"><i class="fa fa-plus"></i> New Task</a></li>
            </ul>
        </div>
        @*<div class="col-lg-6 col-md-4 col-sm-12 text-right">
                <div class="bh_chart hidden-xs">
                    <div class="float-left m-r-15">
                        <small>Visitors</small>
                        <h6 class="mb-0 mt-1"><i class="icon-user"></i> 1,784</h6>
                    </div>
                    <span class="bh_visitors float-right">2,5,1,8,3,6,7,5</span>
                </div>
                <div class="bh_chart hidden-sm">
                    <div class="float-left m-r-15">
                        <small>Visits</small>
                        <h6 class="mb-0 mt-1"><i class="icon-globe"></i> 325</h6>
                    </div>
                    <span class="bh_visits float-right">10,8,9,3,5,8,5</span>
                </div>
                <div class="bh_chart hidden-sm">
                    <div class="float-left m-r-15">
                        <small>Chats</small>
                        <h6 class="mb-0 mt-1"><i class="icon-bubbles"></i> 13</h6>
                    </div>
                    <span class="bh_chats float-right">1,8,5,6,2,4,3,2</span>
                </div>
            </div>*@
    </div>
</div>
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="body form-validation">
                <div class="row clearfix">
                    <div class="col-sm-8">
                        <div class="form-group">
                            <label for="task-name" class="required">Task Name</label>
                            <input type="text" class="form-control" id="task-name" required>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <label for="task-role">Select Role</label>
                        <select id="task-role" class="form-control show-tick ms select2">
                            <option></option>
                            @foreach (var role in roles.Where(x => x.IsRun == null || x.IsRun == false))
                            {
                                <option value="@role.Id">@role.Name</option>
                            }
                        </select>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="task-file">Upload File</label>
                            <input type="file" class="dropify" id="task-file" maxsize="@maxSize">
                            <div class="mt-3"></div>
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="task-description">Description</label>
                            <textarea class="form-control" rows="6" placeholder="Write something about your task (optional)" id="task-description" name="@Html.NameFor(m => m.Description)"></textarea>
                        </div>
                    </div>
                    <div class="col-sm-12 ">
                        <div class="choose-type row">
                            <div class="choose-item col-sm-12 form-group" id="choose-input">
                                <fieldset>
                                    <legend>Response Text</legend>
                                    <div class="row" style="margin-left:0;margin-right:0;">
                                        <div class="col-md-3 col-sm-4">
                                            <div class="form-group input-has-prefix char">
                                                <label for="text-maxlength">Max Length</label>
                                                <input id="text-maxlength" type="number" maxlength="17" class="form-control limit-length">
                                            </div>
                                        </div>
                                        <div class="col-md-9 col-sm-8">
                                            <div class="form-group">
                                                <label for="text-label">Response Label</label>
                                                <input id="text-label" type="text" class="form-control">
                                            </div>
                                        </div>

                                        <div class="col-md-12">
                                            <div class="form-group switch-custom">
                                                <label>Required: <input type="checkbox" class="checkbox-switch" id="text-required" /></label>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="choose-item col-sm-12 form-group" id="choose-file">
                                <fieldset>
                                    <legend>Response File</legend>
                                    <div class="row" style="margin-left:0;margin-right:0;">
                                        <div class="col-md-3 col-sm-4">
                                            <div class="form-group input-has-prefix mb">
                                                <label for="file-maxsize">File Size</label>
                                                <input id="file-maxsize" type="number" maxlength="17" class="form-control limit-length">
                                            </div>
                                        </div>
                                        <div class="col-md-9 col-sm-8">
                                            <div class="form-group">
                                                <label for="file-label">Response Label</label>
                                                <input id="file-label" type="text" class="form-control">
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group switch-custom">
                                                <label>Required: <input id="file-required" type="checkbox" class="checkbox-switch" /></label>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="mt-2">
                            <button id="btn-save" class="btn btn-primary-theme waves-effect" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Creating...">Create</button>
                            <button id="btn-save-new" class="btn btn-primary-theme waves-effect" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Creating...">Create & New</button>
                            <a href="@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "process" ,action = "showstep", groupslug = group.groupSlug, groupid = group.Id, processid = step.IdProcess })" class="btn btn-default waves-effect">Go Back</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section CustomScripts{
    <script src="~/Content/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/Content/build/js/pages/forms/dropify.js"></script>
    <script src="~/Content/vendor/select2/dist/js/select2.min.js"></script>
    <script src="~/Content/vendor/switchery/dist/switchery.min.js"></script>
    <script>
        $(function () {

            createSwitch();
            $("select#task-role").select2({
                placeholder: "Select Role",
                allowClear: true
            });
            var form = $(".form-validation").formValidation();
            $('#btn-save, #btn-save-new').on('click', function () {
                $this = $(this);
                var isHaveError = form.validates();
                if (isHaveError) {
                    return false;
                }
                var name = $('#task-name').val();
                var role = $('#task-role').val();
                var description = $('#task-description').val();

                //text
                var inputLabel = $('#text-label').val();
                var inputmaxLength = $('#text-maxlength').val();
                var inputRequire = $('#text-required').prop('checked') == true ? true : false;
                //file

                var fileLabel = $("#file-label").val();
                var fileSize = $('#file-maxsize').val();
                var fileRequire = $('#file-required').prop('checked') == true ? true : false;

                var inputConfig = {
                    label: inputLabel,
                    maxlength: inputmaxLength,
                    required: inputRequire
                };
                let fileConfig = {
                    label: fileLabel,
                    size: `${fileSize}mb`,
                    required: fileRequire
                };
                var file = $("#task-file")[0].files[0];
                var data = new FormData();
                data.append("name", name);
                data.append("stepid", @step.Id);
                data.append("idRole", role);
                data.append("description", description);
                data.append("fileupload", file);
                data.append("inputConfig", JSON.stringify(inputConfig));
                data.append("fileConfig", JSON.stringify(fileConfig));
                toggleLoading($this);
                setTimeout(function () {
                    if ($this.attr("id") == "btn-save-new") {
                        addTask(data, true)
                    } else {
                        addTask(data)
                    }
                    toggleLoading($this);
                },1000)
            })
        });
        function addTask(data, reload = false) {
            $.ajax({
                url: "@Url.Action("addtask", "process", new { area = "api" })",
                type: "POST",
                data: data,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        localStorage.setItem("showStep", @step.Id);
                        if (reload) {
                            location.reload();
                        } else {
                            location.href = '@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "process" ,action = "showstep", groupslug = group.groupSlug, groupid = group.Id, processid = step.IdProcess })';
                        }
                    } else {
                        showToastr("error", response.message, "toast-bottom-left")
                        console.error(response)
                    }
                }
            });
        }
    </script>

}