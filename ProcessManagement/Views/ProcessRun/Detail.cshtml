@using ProcessManagement.Models;
@model List<ProcessManagement.Models.Step>
@{
    PMSEntities db = new PMSEntities();
    ViewBag.Title = "ShowStep";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var processrun = ViewData["ProcessRun"] as ProcessManagement.Models.Process;
    var userRole = ViewData["UserRoles"] as ProcessManagement.Models.Participate;
    var listRoleRuns = ViewData["ListRoleRuns"] as List<ProcessManagement.Models.RoleRun>;
    var listRole = ViewData["ListRole"] as List<ProcessManagement.Models.Role>;
    var runnextstep = ViewData["StepisNext"] as ProcessManagement.Models.StepRun;
    var isManager = userRole.IsManager;
    var files = ViewData["Files"] as List<ProcessManagement.Models.FileManager>;
    var count = 0;
}

@section CustomCss{
    <link rel="stylesheet" href="~/Content/vendor/sortable/st/prettify/prettify.css" />
}
<div class="block-header">
    <div class="row">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <h2>
                <a href="javascript:void(0);" class="btn btn-xs btn-link primary-theme btn-toggle-fullwidth">
                    <i class="fa fa-arrow-left"></i>
                </a> Process Run Name
            </h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="~/Home/Index" class="primary-theme"><i class="icon-home"></i></a></li>
                <li class="breadcrumb-item"><a href="/" class="primary-theme">Groups</a></li>
                <li class="breadcrumb-item"><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "group", action = "Show", groupid = processrun.IdGroup })" class="primary-theme">@processrun.Group.Name</a></li>
                <li class="breadcrumb-item"><a href="#" class="primary-theme">Detail @processrun.Name</a></li>
            </ul>
        </div>
        @*<div class="col-lg-6 col-md-4 col-sm-12 text-right">
            <div class="bh_chart hidden-xs">
                <div class="float-left m-r-15">
                    <small>Visitors</small>
                    <h6 class="mb-0 mt-1"><i class="icon-user"></i> 1,784</h6>
                </div>
                <span class="bh_visitors float-right">2,5,1,8,3,6,7,5</span>
            </div>
            <div class="bh_chart hidden-sm">
                <div class="float-left m-r-15">
                    <small>Visits</small>
                    <h6 class="mb-0 mt-1"><i class="icon-globe"></i> 325</h6>
                </div>
                <span class="bh_visits float-right">10,8,9,3,5,8,5</span>
            </div>
            <div class="bh_chart hidden-sm">
                <div class="float-left m-r-15">
                    <small>Chats</small>
                    <h6 class="mb-0 mt-1"><i class="icon-bubbles"></i> 13</h6>
                </div>
                <span class="bh_chats float-right">1,8,5,6,2,4,3,2</span>
            </div>
        </div>*@
    </div>
</div>

<div class="row clearfix display-flex">
    <div class="col-lg-4 col-md-12">
        <div class="card" style="height:100%">
            <div class="body">
                <h5>@processrun.Name</h5>
                <p>@processrun.Description</p>
                @if (isManager)
                {
                <div class="progress-container progress-info m-b-25" style="margin: 0; float: right">
                    @if (ViewBag.Checkprocessrun != null)
                    {

                    }
                    else
                    {
                        <button class="btn btn-primary-theme btn-sm" id="btn-runprocess">Run Process</button>
                    }
                    <a class="btn btn-default btn-sm waves-effect" href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "processrun", action = "assignrole", processid = processrun.Id })">Assign Roles</a>
                    <button id="#btn-process-delete" data-id="@processrun.Id" data-name="@processrun.Name" class="btn btn-sm btn-danger waves-effect"><i class="icon-trash"></i></button>

                </div>
                }
                <div class="clearfix"></div>
                @Html.Partial("~/Views/Shared/Common/_File.cshtml", new ViewDataDictionary { { "filess", files }, { "isRun", true } })
            </div>
        </div>
    </div>
    <div class="col-lg-8 col-md-12">
        <div class="card">
            <div class="header">
                <h2>Process Flow</h2>
            </div>
            <div class="body">
                <img style="display: block; margin: 0 auto; max-width: 100%" src="@processrun.Avatar" />
            </div>
        </div>
    </div>
    <div class="col-lg-12 col-md-12">
        <div class="card">
            <div class="body">
                <ul class="nav nav-tabs-new2">
                    @if (ViewBag.Checkprocessrun != null)
                    {
                        <li class="nav-item"><a class="nav-link active show" data-toggle="tab" href="#steprun-tab">Running</a></li>
                    }
                    <li class="nav-item"><a class="nav-link @if (ViewBag.Checkprocessrun == null) { WriteLiteral("active show"); }" data-toggle="tab" href="#role-tab">Role</a></li>
                    @*<li class="nav-item"><a class="nav-link" data-toggle="tab" href="#Activity-tab">Diagram</a></li>*@
                    <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#step-tab">Step</a></li>
                </ul>
                <div class="tab-content">
                    @if (ViewBag.Checkprocessrun != null)
                    {
                        <div class="tab-pane active show" id="steprun-tab">
                            <ul class="step-list">
                                @if (ViewBag.ListRunStep != null)
                                {
                                    foreach (StepRun step in ViewBag.ListRunStep)
                                    {
                                        count++;
                                        List<TaskProcessRun> taskList = db.TaskProcessRuns.Where(z => z.IdStep == step.Id).OrderBy(x => x.Position).ToList();
                                        List<TaskProcessRun> listtaskclose = taskList.Where(x => x.Status1.Name == "Finish").ToList();
                                        <li>
                                            <div class="step @if (taskList.Any()) { WriteLiteral("step-has-task"); }" style="border: 2px solid; border-left:7px solid;">
                                                <div class="step-name">
                                                    <span data-toggle="tooltip" data-placement="top" title="">@step.Name (@taskList.Count())</span>
                                                    @if (step.Status1.Name == "Done")
                                                    {
                                                        <span style="float: right">Approve: @step.AspNetUser.UserName ( Date: @step.Approve_At )</span>
                                                    }
                                                    @if (isManager)
                                                    {
                                                        if (step.Status1.Name == "Running" && listtaskclose.Count == taskList.Count)
                                                        {
                                                            if (step.NextStep1 != 0)
                                                            {
                                                                <button id="btn-choosenextstep" value="@step.Id" data-toggle="modal" data-target="#myModal" class="btn btn-primary-theme btn-sm" style="float: right">Next</button>

                                                            }
                                                            else
                                                            {
                                                                <button id="btn-complete" value="@step.Id" class="btn btn-primary-theme btn-sm" style="float: right">Complete</button>
                                                            }
                                                        }
                                                        if (count > 1 && step.Status1.Name == "Running")
                                                        {
                                                            <button id="btn-deletestep" value="@step.Id" class="btn btn-primary-theme btn-sm" style="float: right; margin-right: 5px;">Delete</button>
                                                        }
                                                    }
                                                </div>
                                                <!-- Modal -->
                                                <div class="modal fade" id="myModal" role="dialog">
                                                    <div class="modal-dialog modal-lg">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <h4 class="modal-title">Choose next step!</h4>
                                                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                            </div>
                                                            <div class="modal-body">
                                                                <form action="">
                                                                    @if (Model != null)
                                                                    {
                                                                        foreach (Step steps in Model.Where(x => x.Key == runnextstep.NextStep1))
                                                                        {
                                                                            if (steps.Figure == "Diamond")
                                                                            {
                                                                                <button style="display: none" id="myRadiostep" type="button" value="@steps.Id" class="btn btn-default"></button>
                                                                                List<Step> liststepdk = Model.Where(x => x.Key == steps.NextStep1 || x.Key == steps.NextStep2).ToList();
                                                                                foreach (Step nextstepdk in liststepdk)
                                                                                {
                                                                                    <input type="radio" name="stepnext" value="@nextstepdk.Id" /> @nextstepdk.Name <br />
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <input type="radio" name="stepnext" value="@steps.Id" /> @steps.Name
                                                                            }
                                                                        }
                                                                    }
                                                                </form>
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button id="btn-nextstep" type="button" class="btn btn-default" data-dismiss="modal">Next</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="task">
                                                <table class="table table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th>Task</th>
                                                            <th>Role</th>
                                                            <th>Status</th>
                                                            <th>By</th>
                                                            <th>Date</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var task in taskList)
                                                        {
                                                            if (task.Status1.Name == "Open")
                                                            {
                                                                <tr>
                                                                    @if (task.ValueFormJson == null)
                                                                    {
                                                                        <td><a href="@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "processrun", action = "detailtask", idruntask = task.Id })">@task.Name</a></td>

                                                                        if (task.IdRole == null)
                                                                        {
                                                                            <td></td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td>@task.Role.Name</td>
                                                                        }
                                                                        <td>@task.Status1.Name</td>
                                                                        <td></td>
                                                                        <td></td>


                                                                    }
                                                                    else
                                                                    {
                                                                        <td><a href="@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "processrun", action = "detailtaskform", idruntask = task.Id })">@task.Name</a></td>

                                                                        if (task.IdRole == null)
                                                                        {
                                                                            <td><p></p></td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td>@task.Role.Name</td>
                                                                        }
                                                                        <td>@task.Status1.Name</td>
                                                                        <td></td>
                                                                        <td></td>
                                                                    }
                                                                </tr>
                                                            }
                                                            if (task.Status1.Name == "Done")
                                                            {
                                                                <tr>
                                                                    @if (task.ValueFormJson == null)
                                                                    {
                                                                        <td><a href="@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "processrun", action = "detailtask", idruntask = task.Id })">@task.Name</a></td>

                                                                        if (task.IdRole == null)
                                                                        {
                                                                            <td></td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td>@task.Role.Name</td>
                                                                        }
                                                                        <td>@task.Status1.Name</td>
                                                                        if (task.DoneBy != null)
                                                                        {
                                                                            <td>@task.AspNetUser1.UserName</td>
                                                                            <td>@task.Done_At</td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td></td>
                                                                            <td></td>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <td><a href="@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "processrun", action = "detailtaskform", idruntask = task.Id })">@task.Name</a></td>

                                                                        if (task.IdRole == null)
                                                                        {
                                                                            <td></td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td>@task.Role.Name</td>
                                                                        }
                                                                        <td>@task.Status1.Name</td>
                                                                        if (task.DoneBy != null)
                                                                        {
                                                                            <td>@task.AspNetUser1.UserName</td>
                                                                            <td>@task.Done_At</td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td></td>
                                                                            <td></td>
                                                                        }
                                                                    }
                                                                </tr>
                                                            }
                                                            if (task.Status1.Name == "Finish")
                                                            {
                                                                <tr>
                                                                    @if (task.ValueFormJson == null)
                                                                    {
                                                                        <td><a href="@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "processrun", action = "detailtask", idruntask = task.Id })">@task.Name</a></td>

                                                                        if (task.IdRole == null)
                                                                        {
                                                                            <td><p></p></td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td>@task.Role.Name</td>
                                                                        }
                                                                        <td>@task.Status1.Name</td>
                                                                        if (task.DoneBy != null)
                                                                        {
                                                                            <td>@task.AspNetUser1.UserName</td>
                                                                            <td>@task.Done_At</td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td></td>
                                                                            <td></td>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <td><a href="@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "processrun", action = "detailtaskform", idruntask = task.Id })">@task.Name</a></td>

                                                                        if (task.IdRole == null)
                                                                        {
                                                                            <td><p></p></td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td>@task.Role.Name</td>
                                                                        }
                                                                        <td>@task.Status1.Name</td>
                                                                        if (task.DoneBy != null)
                                                                        {
                                                                            <td>@task.AspNetUser1.UserName</td>
                                                                            <td>@task.Done_At</td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td></td>
                                                                            <td></td>
                                                                        }
                                                                    }
                                                                </tr>
                                                            }
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    }

                    <div class="tab-pane @if (ViewBag.Checkprocessrun == null) { WriteLiteral("active show"); }" id="role-tab">
                        <div class="table-responsive">
                            <table class="table table-hover dataTable table-custom m-b-0" id="table-assign-role" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>Role</th>
                                        <th>Asign To</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var role in listRole)
                                    {
                                        <tr>
                                            <td>@role.Name</td>
                                            <td>
                                                @{
                                                    List<string> users = listRoleRuns.Where(x => x.IdRole == role.Id).Select(x => x.AspNetUser.UserName).ToList();
                                                    if (users.Any())
                                                    {
                                                        var Susers = String.Join(", ", users);
                                                        WriteLiteral(Susers);
                                                    }
                                                    else
                                                    {
                                                        WriteLiteral("Manager");
                                                    }
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    @*<div class="tab-pane" id="Activity-tab">
                        <div class="body">
                            <img style="display: block;margin: 0 auto; max-width: 100%" src="@processrun.Avatar"/>
                        </div>
                    </div>*@
                    <div class="tab-pane" id="step-tab">
                        <ul class="step-list">
                            @if (Model != null)
                            {
                                foreach (var step in Model.Where(x => x.Figure == "Step" && x.IsRun == true))
                                {
                                    List<TaskProcess> taskList = db.TaskProcesses.Where(x => x.IdStep == step.Id).OrderBy(x => x.Position).ToList();
                                    <li>
                                        <div class="step @if (taskList.Any()) { WriteLiteral("step-has-task"); }" style="border: 2px solid @step.Color; border-left:7px solid @step.Color; color:@step.Color">
                                            <div class="step-name">
                                                <span data-toggle="tooltip" data-placement="top" title="@step.Description">@step.Name (@taskList.Where(x => x.IsRun == true).Count())</span>
                                            </div>
                                        </div>
                                        <div class="task">
                                            <ul class="task-list" id="task-of-step-@step.Id">
                                                @foreach (var task in taskList.Where(x => x.IsRun == true))
                                                {
                                                    <li class="task-item" style="background-color:@task.Color" data-id="@task.Id">
                                                        @if (task.ValueFormJson == null)
                                                        {
                                                            @task.Name
                                                        }
                                                        else
                                                        {
                                                            @task.Name
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section CustomScripts{
    <script src="~/Content/vendor/sortable/sortable.min.js"></script>
    <script src="~/Content/vendor/sortable/st/prettify/prettify.js"></script>
    <script src="~/Content/vendor/sortable/st/prettify/run_prettify.js"></script>
    <script>
        $(function () {
            $(".step-has-task .step-name").on("click", function () {
                var step = $(this).parent(".step");
                var task = step.next();
                task.toggle("slow");
            });
            var showStep = localStorage.getItem("showStep");
            if (showStep) {
                localStorage.removeItem("showStep");
                $(`#task-of-step-${showStep}`).parents(".task").show("slow");
            }
            var task = $(".task-list");
            task.each(function () {
                var element = $(this)[0];
                Sortable.create(element, {
                    handle: '.handle', // handle's class
                    animation: 150,
                    dataIdAttr: 'data-id',
                    onUpdate: function (evt) {
                        ////get item
                        //var fromItem = evt.item;
                        //var toItem = evt.item.previousElementSibling;
                        ////get id
                        //var fromId = fromItem.attributes["data-id"].value;
                        //var toId = toItem.attributes["data-id"].value;
                        //var position = {
                        //    from: fromId,
                        //    to: toId
                        //}
                        //position = JSON.stringify(position);
                        //changePosition(position);





                        //var formList = evt.from.children;
                        //var formID = [];
                        //for (var task of formList) {
                        //    formID.push(task.dataset.id);
                        //}
                        //var toList = evt.to.children;
                        //var toID = [];
                        //for (var task of toList) {
                        //    toID.push(task.dataset.id);
                        //}
                        //console.log(evt.from, evt.to);

                        var newTaskOrder = evt.from.children;
                        var newPositionList = [];
                        for (var i = 0; i < newTaskOrder.length; i++) {
                            var temp = {
                                idTask : newTaskOrder[i].dataset.id,
                                position: (i + 1)
                            }
                            newPositionList.push(temp);
                        }
                        console.log(newPositionList);
                        changePosition(JSON.stringify(newPositionList));
                    }
                });
            })
        });
        function changePosition(position) {
            $.ajax({
                url: "@Url.Action("changetaskposition","process",new { area = "api"})",
                type: "POST",
                data: { position : position },
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status != 200) {
                        showToastr("error", "Error!!", "toast-bottom-left")
                        console.error(response)
                    }
                }
            });
        }

        $(function () {
            $('#btn-runprocess').on('click', function () {
                let data = {
                    idprocess: @processrun.Id
                }
                runprocess(data);
            })
        });
        

        $(function () {
            var idstep = $('#btn-choosenextstep').val();
            $('#btn-nextstep').on('click', function () {
                var idstepdiamond = $('#myRadiostep').val();
                var idnextstep = $('input[name="stepnext"]:checked').val();
                if (idnextstep != null) {
                    let check = confirm("Next step?");
                    if (check) {
                        if (idstepdiamond == undefined) {
                            let data = {
                                idStep: idstep,
                                idnextstep: idnextstep,
                                idstepdiamond: 0
                            }
                            addnextstepinrunprocess(data);
                        } else {
                            let data = {
                                idStep: idstep,
                                idnextstep: idnextstep,
                                idstepdiamond: idstepdiamond
                            }
                            addnextstepinrunprocess(data);
                        }
                    }
                } else {
                    alert('Please choose next step!');
                    return false;
                }
            })
        });

        $(function () {
            var idstep = $('#btn-complete').val();
            $('#btn-complete').on('click', function () {
                let check = confirm("Next step?");
                if (check) {
                        let data = {
                            idStep: idstep
                        }
                        completestepinrunprocess(data);
                }
            })
        });

        $(function () {
            var idstep = $('#btn-deletestep').val();
            $('#btn-deletestep').on('click', function () {
                let check = confirm("Delete step?");
                if (check) {
                    let data = {
                        idStep: idstep
                    }
                    deletenextsteprun(data);
                }
            })
        })

        function runprocess(data) {
            $.ajax({
                url: "@Url.Action("runprocess", "process",new { area = "api"})",
                type: "POST",
                data: data,
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        //showToastr("error", "Error!!", "toast-bottom-left")
                        window.location.reload();
                        console.error(response)
                    }
                }
            });
        }

        function addnextstepinrunprocess(data) {
            $.ajax({
                url: "@Url.Action("addnextstepinrunprocess", "process",new { area = "api"})",
                type: "POST",
                data: data,
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        //showToastr("error", "Error!!", "toast-bottom-left")
                        window.location.reload();
                        console.error(response)
                    }
                }
            });
        }

        function deletenextsteprun(data) {
            $.ajax({
                url: "@Url.Action("deletenextsteprun", "process",new { area = "api"})",
                type: "POST",
                data: data,
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        //showToastr("error", "Error!!", "toast-bottom-left")
                        window.location.reload();
                        console.error(response)
                    }
                }
            });
        }

        function completestepinrunprocess(data) {
            $.ajax({
                url: "@Url.Action("completestepinrunprocess", "process",new { area = "api"})",
                type: "POST",
                data: data,
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        //showToastr("error", "Error!!", "toast-bottom-left")
                        window.location.reload();
                        console.error(response)
                    }
                }
            });
        }

        $(function () {
            $('#btn-process-delete').on('click', function () {
                var $this = $(this);
                var processId = $this[0].dataset.id,
                    processName = $this[0].dataset.name;
                var content = `<div id="process-delete-confirm">
                                    <div class="text-danger">You are going to remove <span class="text-strong">${processName}</span>. Removed this process CANNOT be restored! Are you ABSOLUTELY sure?</div>
                                    <div>Please type <span class="text-danger background-danger">${ processName}</span> to proceed or close this modal to cancel.</div>
                                    <div class="process-confirm form-group">
                                        <input type="text" class="form-control">
                                    </div>
                               </div>`;

                setConfirm(`Confirmation required`, content, function () {
                    var container = this.$content.find(".process-confirm");
                    var confirm = this.$content.find(".process-confirm > input").val().trim();
                    if (confirm == "") {
                        container.addClass("error");
                        container.append(`<span class="error-message">This field is required.</span>`);
                        return false;
                    } else {
                        container.removeClass("error");
                        $(".error-message").remove();
                        if (confirm === processName) {
                            DeleteProcessRun(processId);
                        } else {
                            container.addClass("error");
                            container.append(`<span class="error-message">Process name not match.</span>`);
                            return false;

                        }
                    };
                });
            });
        })

        function DeleteProcessRun(data) {
            $.ajax({
                url: "@Url.Action("DeleteProcessRun", "processrun",new { area = "api"})",
                type: "POST",
                data: { processid: data },
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        location.href = '@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "group", action = "show", groupid = processrun.IdGroup })';
                    } else {
                        console.error(response)
                    }
                }
            });
        }

    </script>
}

